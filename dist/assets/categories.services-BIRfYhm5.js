var u=Object.defineProperty;var y=(c,e,t)=>e in c?u(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var s=(c,e,t)=>(y(c,typeof e!="symbol"?e+"":e,t),t);import{s as r}from"./index-BCta2iwk.js";const a=class a{static async findAllUI(){try{const e=r.getState().authToken;return await(await fetch(`${a.API_URL}/business`,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async findAll(){try{const e=r.getState().authToken;return await(await fetch(`${a.API_URL}/business/withDeleted`,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async create(e){try{const t=r.getState().authToken;return await(await fetch(`${a.API_URL}/business`,{method:"POST",body:JSON.stringify(e),headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}static async restore(e){try{const t=r.getState().authToken;return await(await fetch(`${a.API_URL}/business/${e}/restore`,{method:"PATCH",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}static async removeSoft(e){try{const t=r.getState().authToken;return await(await fetch(`${a.API_URL}/business/${e}/soft`,{method:"DELETE",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}static async remove(e){try{const t=r.getState().authToken;return await(await fetch(`${a.API_URL}/business/${e}`,{method:"DELETE",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}};s(a,"API_URL","http://localhost:4000/api");let i=a;const o=class o{static async findAllUI(){try{const e=r.getState().authToken;return await(await fetch(`${o.API_URL}/categories`,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async findAll(){try{const e=r.getState().authToken;return await(await fetch(`${o.API_URL}/categories/withDeleted`,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async create(e){try{const t=r.getState().authToken;return await(await fetch(`${o.API_URL}/categories`,{method:"POST",body:JSON.stringify(e),headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}static async restore(e){try{const t=r.getState().authToken;return await(await fetch(`${o.API_URL}/categories/${e}/restore`,{method:"PATCH",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}static async removeSoft(e){try{const t=r.getState().authToken;return await(await fetch(`${o.API_URL}/categories/${e}/soft`,{method:"DELETE",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}static async remove(e){try{const t=r.getState().authToken;return await(await fetch(`${o.API_URL}/categories/${e}`,{method:"DELETE",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${t}`}})).json()}catch(t){return t}}};s(o,"API_URL","http://localhost:4000/api");let h=o;export{i as B,h as C};
