var u=Object.defineProperty;var y=(i,r,o)=>r in i?u(i,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[r]=o;var l=(i,r,o)=>(y(i,typeof r!="symbol"?r+"":r,o),o);import{s as n,R as p}from"./index-BCta2iwk.js";const t=class t{static async findAllClient(){try{const r=n.getState().authToken,o=`${t.API_URL}/properties/client`;return await(await fetch(o,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${r}`}})).json()}catch(r){return r}}static async findAll(){try{const r=n.getState().authToken,o=`${t.API_URL}/properties`;return await(await fetch(o,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${r}`}})).json()}catch(r){return r}}static async findOne(r){try{const o=n.getState().authToken;let e=`${t.API_URL}/properties/${r}`;return n.getState().role===p.ADMIN&&(e=`${t.API_URL}/properties/${r}/withDeleted`),await(await fetch(e,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${o}`}})).json()}catch(o){return o}}static async create(r){t.abortController&&t.abortController.abort(),t.abortController=new AbortController;const o=t.abortController.signal;try{const e=n.getState().authToken,a=`${t.API_URL}/properties`;return await(await fetch(a,{method:"POST",signal:o,body:JSON.stringify(r),headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async update(r,o){t.abortController&&t.abortController.abort(),t.abortController=new AbortController;const e=t.abortController.signal;try{const a=n.getState().authToken,s=`${t.API_URL}/properties/${r}`;return await(await fetch(s,{method:"PATCH",signal:e,body:JSON.stringify(o),headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${a}`}})).json()}catch(a){return a}}static async restore(r){t.abortController&&t.abortController.abort(),t.abortController=new AbortController;const o=t.abortController.signal;try{const e=n.getState().authToken,a=`${t.API_URL}/properties/${r}/restore`;return await(await fetch(a,{method:"PATCH",signal:o,headers:{Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async removeSoft(r){t.abortController&&t.abortController.abort(),t.abortController=new AbortController;const o=t.abortController.signal;try{const e=n.getState().authToken,a=`${t.API_URL}/properties/${r}/soft`;return await(await fetch(a,{method:"DELETE",signal:o,headers:{Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async remove(r){t.abortController&&t.abortController.abort(),t.abortController=new AbortController;const o=t.abortController.signal;try{const e=n.getState().authToken,a=`${t.API_URL}/properties/${r}`;return await(await fetch(a,{method:"DELETE",signal:o,headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${e}`}})).json()}catch(e){return e}}static async switchActive(r,o){t.abortController&&t.abortController.abort(),t.abortController=new AbortController;const e=t.abortController.signal;try{const a=n.getState().authToken,s=`${t.API_URL}/properties/${r}/active`;return await(await fetch(s,{method:"PATCH",signal:e,body:JSON.stringify({is_active:o===!0?1:0}),headers:{"content-type":"application/json;charset=UTF-8",Authorization:`Bearer ${a}`}})).json()}catch(a){return a}}};l(t,"API_URL","http://localhost:4000/api"),l(t,"abortController",new AbortController);let c=t;export{c as P};
